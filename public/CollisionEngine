class CollisionEngine {
  constructor() {
    this.player;
    this.objects = [];
  }

  AddPlayerBox(obj) {
    //get players dimensions
    //get x y z
    //get size
    //figure out min and max for x,y,z.
    return {minX: 0, maxX:0, minY:0, maxY:0, minZ:0, maxZ:0}
  }

  AddPlayerSphere(obj) {
    //get players dimensions
    return {x: 0, y: 0, z: 0, radius: 0}

  }

  AddRoom(obj) {
    //get room dimensions
  }

  AddRoomObject(obj) {
    //get object dimensions
  }

  PlayerColliding() {

  }

  IntersectPlayerBoxVsBox(box, obj) {
    return  (box.minX <= obj.maxX && box.maxX >= obj.minX) &&
            (box.minY <= obj.maxY && box.maxY >= obj.minY) &&
            (box.minZ <= obj.maxZ && box.maxZ >= obj.minZ);

  }

  IntersectPlayerSphereVsBox(sphere, box) {
    var x = Math.max(box.minX, Math.min(sphere.x, box.maxX);
    var y = Math.max(box.minY, Math.min(sphere.y, box.maxY);
    var z = Math.max(box.minZ, Math.min(sphere.z, box.maxZ);

    var distance = Math.sqrt((x - sphere.x) * (x - sphere.x) +
                             (y - sphere.y) * (y - sphere.y) +
                             (z - sphere.z) * (z - sphere.z));

    return distance < sphere.radius;
  }
}
